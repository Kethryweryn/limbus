generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client" // ← chemin par défaut
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id             String     @id @default(cuid())
  title          String
  description    String
  noteIntention  String?
  teaserUrl      String?
  slug           String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  published      Boolean    @default(true)

  characters     Character[]
  factions       Faction[]
  intrigues      Intrigue[]
  items          Item[]
  sessions       Session[]
  documents      Document[]
}

model Character {
  id          String     @id @default(cuid())
  name        String
  description String?
  slug        String     @unique
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  published   Boolean    @default(true)

  factions    Faction[]  @relation("CharacterFactions")
  intrigues   Intrigue[] @relation("CharacterIntrigues")
  documents   Document[]
  sessionAssignments SessionAssignment[]
}

model Item {
  id          String     @id @default(cuid())
  name        String
  description String?
  quantity    Int
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  published   Boolean    @default(true)

  intrigues   Intrigue[] @relation("IntrigueItems")
}

model Faction {
  id          String     @id @default(cuid())
  name        String
  description String?
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  published   Boolean    @default(true)

  characters  Character[] @relation("CharacterFactions")
  documents   Document[]  @relation("DocumentFactions")
}

model Intrigue {
  id          String     @id @default(cuid())
  title       String
  summary     String?
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  published   Boolean    @default(true)

  characters  Character[] @relation("CharacterIntrigues")
  items       Item[]      @relation("IntrigueItems")
}

model Document {
  id          String     @id @default(cuid())
  title       String
  content     String?
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  published   Boolean    @default(true)

  characterId String?
  character   Character? @relation(fields: [characterId], references: [id])

  factions    Faction[]  @relation("DocumentFactions")
}

model Session {
  id          String     @id @default(cuid())
  name        String
  date        DateTime?
  gameId      String
  game        Game       @relation(fields: [gameId], references: [id])
  published   Boolean    @default(true)

  assignments SessionAssignment[]
}

model SessionAssignment {
  id          String   @id @default(cuid())
  sessionId   String
  characterId String
  session     Session  @relation(fields: [sessionId], references: [id])
  character   Character @relation(fields: [characterId], references: [id])
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String
  role     String
}
